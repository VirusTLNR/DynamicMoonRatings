<Project Sdk="Microsoft.NET.Sdk">

    <!-- BepInEx Properties -->
    <PropertyGroup>
        <AssemblyName>DynamicMoonRatings</AssemblyName>
        <Product>DynamicMoonRatings</Product>
        <!-- Change to whatever version you're currently on. -->
        <Version>1.0.0</Version>
    </PropertyGroup>

    <!-- Project Properties -->
    <PropertyGroup>
        <TargetFramework>netstandard2.1</TargetFramework>
        <RootNamespace>DynamicMoonRatings</RootNamespace>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <LangVersion>latest</LangVersion>
    </PropertyGroup>

    <!-- Enable Nullable for better IDE null-checking -->
    <PropertyGroup>
        <Nullable>enable</Nullable>
    </PropertyGroup>

    <!-- Set NuGet Sources -->
    <PropertyGroup>
        <RestoreAdditionalProjectSources>
            https://api.nuget.org/v3/index.json;
            https://nuget.bepinex.dev/v3/index.json;
            https://nuget.windows10ce.com/nuget/v3/index.json
        </RestoreAdditionalProjectSources>
    </PropertyGroup>

    <!-- Disable Publicizer Warnings -->
    <PropertyGroup>
        <NoWarn>$(NoWarn);CS0436</NoWarn>
    </PropertyGroup>

    <!-- Embed Debug Symbols for Easier Debugging -->
    <PropertyGroup>
        <DebugSymbols>true</DebugSymbols>
        <DebugType>embedded</DebugType>
        <!--
        Trim the project path to prevent players from potentially
        viewing Private Information in stack traces.
        -->
        <PathMap>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)'))=./</PathMap>
        <Authors>VirusTLNR</Authors>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
      <IsPublishable>False</IsPublishable>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
      <IsPublishable>False</IsPublishable>
    </PropertyGroup>

    <!-- Primary Package References -->
    <ItemGroup>
        <PackageReference Include="BepInEx.Analyzers" Version="1.*" PrivateAssets="all" />
        <PackageReference Include="BepInEx.Core" Version="5.*" PrivateAssets="all" />
        <PackageReference Include="IAmBatby.LethalLevelLoader" Version="1.3.13" />
        <PackageReference Include="LethalCompany.GameLibs.Steam" Version="*-*" Publicize="true" PrivateAssets="all" />
        <PackageReference Include="UnityEngine.Modules" Version="2022.3.9" IncludeAssets="compile" PrivateAssets="all" />
        <PackageReference Include="TeamBMX.LobbyCompatibility" Version="1.*" PrivateAssets="all" />
    </ItemGroup>

    <ItemGroup Condition="'$(TargetFramework.TrimEnd(`0123456789`))' == 'net'">
        <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.2" PrivateAssets="all" />
    </ItemGroup>
	<!-- Adding in my own PluginInfo config -->
	<Target Name="AddGeneratedFile" BeforeTargets="BeforeCompile;CoreCompile" Inputs="$(MSBuildAllProjects)" Outputs="$(IntermediateOutputPath)GeneratedFile.cs">
		<PropertyGroup>
			<BepInExPluginGuid Condition="'$(BepInExPluginGuid)' == ''">$(AssemblyName)</BepInExPluginGuid>
			<BepInExPluginName Condition="'$(BepInExPluginName)' == ''">$(Product)</BepInExPluginName>
			<BepInExPluginVersion Condition="'$(BepInExPluginVersion)' == ''">$(Version)</BepInExPluginVersion>
			<GeneratedText>
				<![CDATA[
namespace $(RootNamespace)
{
    internal static class PluginInfo
    {
        //built automatically in project file so dont waste time editing this "PluginInfo.cs", go edit the Project File! this doesnt use BepInEx.PluginInfoProps so dont re-install it!
        public const string PLUGIN_GUID = "$(Authors).$(BepInExPluginGuid)"%3B
        public const string PLUGIN_NAME = "$(BepInExPluginName)"%3B
        public const string PLUGIN_VERSION = "$(BepInExPluginVersion)"%3B
    }
}
      ]]>
			</GeneratedText>
			<GeneratedFilePath>$(IntermediateOutputPath)PluginInfo.cs</GeneratedFilePath>
		</PropertyGroup>
		<ItemGroup>
			<Compile Include="$(GeneratedFilePath)" />
			<FileWrites Include="$(GeneratedFilePath)" />
		</ItemGroup>
		<WriteLinesToFile Lines="$(GeneratedText)" File="$(GeneratedFilePath)" WriteOnlyWhenDifferent="true" Overwrite="true" />
	</Target>
</Project>
